{"version":3,"file":"static/js/512.23e42277.chunk.js","mappings":"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","sources":["worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { Chess } from 'chess.js';\n\nclass Engine {\n\n    constructor(fen) {\n        this.chessjs = new Chess(fen);\n    }\n\n    /*\n     * Evaluates a board position by adding up the values of each piece on the board.  Positive values\n     * favor white and negative values favor black.\n     */\n    evaluate() {\n        const values = {'p': -1, 'n': -3, 'b': -3, 'r': -5, 'q': -9, 'P': 1, 'N': 3, 'B': 3, 'R': 5, 'Q': 9};\n\n        const fen = this.chessjs.fen();\n\n        let value = 0;\n        for (let i=0; i<fen.indexOf(\" \"); i++) {\n            if (values[fen.charAt(i)]) {\n                value += values[fen.charAt(i)];\n            }\n        }\n\n        return value;\n    }\n\n    /*\n     * Implements the minimax search algorithm for finding the best move, where white is the maximizing\n     * player and black is the minimizing player.\n     */\n    minimax_root(initialDepth, maximizingPlayer) {\n        return this.minimax(initialDepth, initialDepth, maximizingPlayer);\n    }\n    \n    minimax(initialDepth, currentDepth, maximizingPlayer) {\n        let best = [];\n\n        if (currentDepth === 0) {\n            let score = this.evaluate();\n            return {score: score, best: best};\n        }\n\n        const moves = this.chessjs.moves({verbose: true});\n\n        if (maximizingPlayer) {\n            let max = -999;\n            for (let i=0; i < moves.length; i++) {\n                this.chessjs.move(moves[i]);\n                let minimax = this.minimax(initialDepth, currentDepth-1, false);\n                let score = minimax.score;\n                this.chessjs.undo();\n\n                if (score > max) {\n                    max = score;\n                    best = [];\n                    best.push(moves[i]);\n                }\n                else if (score === max) {\n                    best.push(moves[i]);\n                }\n            }\n            return {score: max, best: best};\n        }    \n        else {\n            let min = 999;\n            for (let i=0; i < moves.length; i++) {\n                this.chessjs.move(moves[i]);\n                let minimax = this.minimax(initialDepth, currentDepth-1, true);\n                let score = minimax.score;\n                this.chessjs.undo();\n\n                if (score < min) {\n                    min = score;\n                    best = [];\n                    best.push(moves[i]);\n                }\n                else if (score === min) {\n                    best.push(moves[i]);\n                }\n            }\n            return {score: min, best: best};\n        }    \n    }\n\n    /*\n     * Implements alpha beta pruning, where alpha and beta keep track of the best score either side\n     * can acheive, assuming best play from the opponent.\n     */\n    alphabeta_root(initialDepth, maximizingPlayer) {\n        return this.alphabeta(initialDepth, initialDepth, -999, 999, maximizingPlayer);\n    }\n\n    alphabeta(initialDepth, currentDepth, alpha, beta, maximizingPlayer) {\n        let best = [];\n\n        if (currentDepth === 0) {\n            let score = this.evaluate();\n            return {score: score, best: best};\n        }\n\n        const moves = this.chessjs.moves({verbose: true});\n\n        if (maximizingPlayer) {\n            let max = -999;\n            for (let i=0; i < moves.length; i++) {\n                this.chessjs.move(moves[i]);\n                let minimax = this.alphabeta(initialDepth, currentDepth-1, alpha, beta, false);\n                let score = minimax.score;\n                this.chessjs.undo();\n\n                if (score > max) {\n                    max = score;\n                    best = [];\n                    best.push(moves[i]);\n                }\n                else if (score === max) {\n                    best.push(moves[i]);\n                }\n\n                if (score > alpha) {\n                    alpha = score;\n                }\n                if (beta <= alpha) {\n                    break;\n                }\n            }\n            return {score: max, best: best};\n        }    \n        else {\n            let min = 999;\n            for (let i=0; i < moves.length; i++) {\n                this.chessjs.move(moves[i]);\n                let minimax = this.alphabeta(initialDepth, currentDepth-1, alpha, beta, true);\n                let score = minimax.score;\n                this.chessjs.undo();\n\n                if (score < min) {\n                    min = score;\n                    best = [];\n                    best.push(moves[i]);\n                }\n                else if (score === min) {\n                    best.push(moves[i]);\n                }\n\n                if (score < beta) {\n                    beta = score;\n                }\n                if (beta <= alpha) {\n                    break;\n                }\n            }\n            return {score: min, best: best};\n        }    \n    }\n\n    move_random() {\n        const moves = this.chessjs.moves({verbose: true});\n        for (let i=0; i< moves.length; i++) {\n            console.log(moves[i].to + \", \" + moves[i].from + \" : \" + moves[i].promotion);\n        }\n        const random = moves[Math.floor(Math.random() * moves.length)];\n\n        this.chessjs.move({from: random.from, to: random.to, promotion: random.promotion});\n        const fen = this.chessjs.fen();\n        \n        return {fen: fen, from: random.from, to: random.to, san: random.san};\n    }\n\n    move_minimax() {\n        let minimax = this.minimax_root(2, this.chessjs.turn() === 'w' ? true : false);\n        let best = minimax.best[Math.floor(Math.random() * minimax.best.length)];;\n        \n        this.chessjs.move({from: best.from, to: best.to, promotion: best.promotion});\n        const fen = this.chessjs.fen();\n\n        return {fen: fen, from: best.from, to: best.to, san: best.san};\n    }\n\n    move_alphabeta() {\n        let minimax = this.alphabeta_root(3, this.chessjs.turn() === 'w' ? true : false);\n        let best = minimax.best[Math.floor(Math.random() * minimax.best.length)];;\n        \n        this.chessjs.move({from: best.from, to: best.to, promotion: best.promotion});\n        const fen = this.chessjs.fen();\n\n        return {fen: fen, from: best.from, to: best.to, san: best.san};\n    }\n}\n\nonmessage = e => {\n    const engine = new Engine(e.data);\n    //postMessage(engine.move_random());\n    //postMessage(engine.move_minimax());\n    postMessage(engine.move_alphabeta());\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [314], () => (__webpack_require__(8512)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"b78506ac\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/lets-play-chess/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t512: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkchess_one_player\"] = self[\"webpackChunkchess_one_player\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(314).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Engine","constructor","fen","this","chessjs","Chess","evaluate","values","value","i","indexOf","charAt","minimax_root","initialDepth","maximizingPlayer","minimax","currentDepth","best","score","moves","verbose","max","length","move","undo","push","min","alphabeta_root","alphabeta","alpha","beta","move_random","console","log","to","from","promotion","random","Math","floor","san","move_minimax","turn","move_alphabeta","onmessage","e","engine","data","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}